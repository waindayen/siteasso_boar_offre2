---
const tables = [
  {
    name: "projects",
    icon: "üéØ",
    description: "Projets en cours et termin√©s"
  },
  {
    name: "donations",
    icon: "üí∞",
    description: "Historique des dons"
  },
  {
    name: "volunteers",
    icon: "ü§ù",
    description: "Base des b√©n√©voles"
  },
  {
    name: "users",
    icon: "üë•",
    description: "Utilisateurs du syst√®me"
  }
];
---

<div class="bg-white rounded-xl shadow-sm p-6">
  <div class="flex justify-between items-center mb-6">
    <h2 class="text-lg font-medium text-gray-900">Base de donn√©es</h2>
    <div class="flex gap-2">
      <button
        id="backupDb"
        class="px-4 py-2 bg-emerald-100 text-emerald-700 rounded-lg hover:bg-emerald-200 transition-colors"
      >
        Sauvegarder
      </button>
      <button
        id="importDb"
        class="px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors"
      >
        Importer
      </button>
    </div>
  </div>

  <div class="grid md:grid-cols-2 lg:grid-cols-4 gap-4">
    {tables.map((table) => (
      <div class="border border-gray-200 rounded-lg p-4 hover:border-emerald-500 transition-all cursor-pointer">
        <div class="flex items-center gap-3 mb-3">
          <span class="text-2xl">{table.icon}</span>
          <h3 class="font-medium text-gray-900">{table.name}</h3>
        </div>
        <p class="text-sm text-gray-600 mb-4">{table.description}</p>
        <div class="flex justify-between text-sm">
          <button
            class="text-emerald-600 hover:text-emerald-700"
            onclick={`openTable('${table.name}')`}
          >
            Visualiser
          </button>
          <button
            class="text-gray-600 hover:text-gray-700"
            onclick={`exportTable('${table.name}')`}
          >
            Exporter
          </button>
        </div>
      </div>
    ))}
  </div>

  <!-- Modal pour visualiser/√©diter une table -->
  <div id="tableModal" class="hidden fixed inset-0 bg-black/50 flex items-center justify-center">
    <div class="bg-white rounded-xl w-full max-w-4xl max-h-[80vh] overflow-hidden">
      <div class="p-6 border-b border-gray-200 flex justify-between items-center">
        <h3 class="text-lg font-medium text-gray-900" id="tableTitle"></h3>
        <button onclick="closeModal()" class="text-gray-500 hover:text-gray-700">
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
      <div class="p-6 overflow-auto">
        <div class="mb-4 flex justify-between items-center">
          <div class="flex gap-2">
            <button
              id="addRow"
              class="px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 transition-colors"
            >
              Ajouter
            </button>
            <button
              id="deleteSelected"
              class="px-4 py-2 bg-red-100 text-red-700 rounded-lg hover:bg-red-200 transition-colors"
            >
              Supprimer
            </button>
          </div>
          <input
            type="text"
            placeholder="Rechercher..."
            class="px-4 py-2 border border-gray-300 rounded-lg"
          />
        </div>
        <div class="overflow-x-auto">
          <table class="min-w-full divide-y divide-gray-200">
            <thead id="tableHead"></thead>
            <tbody id="tableBody"></tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
let currentTable = null;

function openTable(tableName) {
  currentTable = tableName;
  document.getElementById('tableTitle').textContent = tableName;
  document.getElementById('tableModal').classList.remove('hidden');
  loadTableData(tableName);
}

function closeModal() {
  document.getElementById('tableModal').classList.add('hidden');
}

async function loadTableData(tableName) {
  try {
    const response = await fetch(`/api/admin/database/${tableName}`);
    const data = await response.json();
    renderTable(data);
  } catch (error) {
    console.error('Erreur lors du chargement des donn√©es:', error);
  }
}

function renderTable(data) {
  if (!data || !data.length) return;

  const thead = document.getElementById('tableHead');
  const tbody = document.getElementById('tableBody');
  
  // En-t√™tes
  const columns = Object.keys(data[0]);
  thead.innerHTML = `
    <tr>
      <th class="px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
        <input type="checkbox" class="rounded border-gray-300">
      </th>
      ${columns.map(col => `
        <th class="px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
          ${col}
        </th>
      `).join('')}
      <th class="px-6 py-3 bg-gray-50"></th>
    </tr>
  `;

  // Donn√©es
  tbody.innerHTML = data.map(row => `
    <tr>
      <td class="px-6 py-4 whitespace-nowrap">
        <input type="checkbox" class="rounded border-gray-300">
      </td>
      ${columns.map(col => `
        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
          ${row[col]}
        </td>
      `).join('')}
      <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
        <button class="text-emerald-600 hover:text-emerald-700">Modifier</button>
      </td>
    </tr>
  `).join('');
}

// Event listeners
document.getElementById('backupDb')?.addEventListener('click', async () => {
  try {
    const response = await fetch('/api/admin/database/backup', { method: 'POST' });
    if (response.ok) {
      alert('Sauvegarde effectu√©e avec succ√®s');
    }
  } catch (error) {
    alert('Erreur lors de la sauvegarde');
  }
});

document.getElementById('importDb')?.addEventListener('click', () => {
  const input = document.createElement('input');
  input.type = 'file';
  input.accept = '.sql,.json';
  input.onchange = async (e) => {
    const file = e.target.files[0];
    if (file) {
      const formData = new FormData();
      formData.append('database', file);
      try {
        const response = await fetch('/api/admin/database/import', {
          method: 'POST',
          body: formData
        });
        if (response.ok) {
          alert('Import effectu√© avec succ√®s');
          if (currentTable) {
            loadTableData(currentTable);
          }
        }
      } catch (error) {
        alert('Erreur lors de l\'import');
      }
    }
  };
  input.click();
});
</script>